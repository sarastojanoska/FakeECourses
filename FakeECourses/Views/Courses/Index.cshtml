@model FakeECourses.ViewModel.CourseSemester

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-controller ="Courses" asp-action="Index" method="get">
    <p>
        <select asp-for="Coursesemester" asp-items="Model.Semesters">
            <option value="">All</option>
        </select>
        <select asp-for="Courseprogramm" asp-items="Model.Programms">
            <option value="">All</option>
        </select>
        Title: <input type ="text" asp-for="SearchString" />
        <input type="submit" value="Filter" />
    </p>
</form>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Courses[0].Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Courses[0].Credits)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Courses[0].Semester)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Courses[0].Programme)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Courses[0].EducationLevel)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Courses[0].FirstTeacher)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Courses[0].SecondTeacher)
                </th>
                <th>@Html.DisplayNameFor(model => model.Courses[0].Students)</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Courses)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Credits)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Semester)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Programme)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EducationLevel)
                    </td>
                    <td>
                        @if (item.FirstTeacherId != null)
                        {
                            <a asp-controller="Teachers" asp-action="Details" asp-route-id="@item.FirstTeacherId">
                                @Html.DisplayFor(modelItem => item.FirstTeacher.FullName)
                            </a>}
                    </td>
                    <td>
                        @if (item.SecondTeacherId != null)
                        {
                            <a asp-controller="Teachers" asp-action="Details" asp-route-id="@item.SecondTeacherId">
                                @Html.DisplayFor(modelItem => item.SecondTeacher.FullName)
                            </a>}
                    </td>
                    <td>
                        @foreach (var student in item.Students)
                        {<a asp-controller="Students" asp-action="Details" asp-route-id="@student.StudentId">@student.Student.FullName</a><br />}
                </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a> |
                        <a asp-controller="Enrollments" asp-action="EnrollStudents" asp-route-id="@item.Id">Enroll Students</a> |
                        <a asp-controller="Enrollments" asp-action="UnenrollStudents" asp-route-id="@item.Id">Unenroll Students</a>
                    </td>
            </tr>
        }
        </tbody>
    </table>
